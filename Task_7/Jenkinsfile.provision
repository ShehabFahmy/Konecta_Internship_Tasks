def EC2_IP = ""

pipeline {
  agent none

  stages {

    stage('Checkout') {
      agent any
      steps {
        checkout scm
      }
    }

    stage('Run Terraform') {
      agent {
        docker {
          image 'hashicorp/terraform:latest'
          args '--entrypoint="" -u root:root'
        }
      }
      steps {
        dir("./Terraform") {
          sh '''
            terraform init
            terraform apply --auto-approve
          '''
          script {
            EC2_IP = sh(script: "terraform output -raw EC2_IP", returnStdout: true).trim()
            echo "EC2_IP is ${EC2_IP}"
          }
        }
      }
    }

    stage('Run Ansible') {
      agent {
        docker {
          image 'alpine/ansible:latest'
          args '-u root:root'
        }
      }
      steps {
        dir("./Ansible") {
          withCredentials([sshUserPrivateKey(credentialsId: 'ansible-ssh-key',keyFileVariable: 'SSH_KEY')]) {
            sh '''
              ansible-playbook playbook.yaml --private-key $SSH_KEY
            '''
          }
        }
      }
    }

  }

  post {
    success {
      // Trigger pipeline 2, passing EC2_IP
      build job: 'deploy-pipeline-job', parameters: [
        string(name: 'EC2_IP', value: EC2_IP)
      ]
    }
  }
}
